{"version":3,"sources":["helpers/request.helper.js","constants.js","components/Base/InputText.jsx","views/Join/index.jsx","helpers/token.helper.js","components/Panels/ChatPanel/index.jsx","helpers/events.helper.js","components/Controls/GroupsControl/GroupItem.jsx","components/Controls/GroupsControl/index.jsx","components/Controls/FriendsControl/FriendItem.jsx","helpers/date.helper.js","components/Controls/FriendsControl/index.jsx","components/Base/Checkbox.jsx","components/Panels/GroupCreaterPanel/index.jsx","components/Controls/SearchControl/index.jsx","components/Panels/SearchResultsPanel/MessagesListResult.jsx","components/Panels/SearchResultsPanel/index.jsx","components/Controls/addFriendControl/index.jsx","components/Panels/ProfilePanel/index.jsx","components/Controls/UserControl/index.jsx","views/Dashboard/index.jsx","views/SignUp/index.jsx","utils/auth.js","shared/Auth/PrivateRoute.jsx","shared/Auth/PublicRoute.jsx","views/App/index.jsx","serviceWorker.js","index.js"],"names":["defaualtAPIConfig","config","Object","assign","method","mode","headers","body","JSON","stringify","url","a","fetch","res","json","response","InputText","placeholder","type","value","handleOnChange","errors","handleOnKeyUp","className","onChange","target","onKeyUp","values","Join","useState","username","setUsername","password","setPassword","setErrors","onClick","event","UserParameters","requestHelper","then","valid","token","preventDefault","localStorage","setItem","window","location","catch","err","general","to","href","src","alt","defaultProps","decodeUserToken","getItem","jwtDecoder","ChatPanel","socket","selectedGroup","selectedFriend","groupName","setGroupName","message","setMessage","messages","setMessages","userID","_id","useEffect","emit","friendID","reverse","groupID","callback","handleOnSendMessage","createdAt","Date","now","map","index","userFrom","key","style","fontSize","toString","keyCode","GroupItem","on","console","log","GroupsControl","setSelectedGroup","setSelectedFriend","groups","setGroups","handleOnSelectedGroup","FriendItem","image","time","setTime","lastMessage","setLastMessage","unseeMessage","setUnseeMessage","meesageUserID","hour","getHours","getMinutes","hourFormater","filter","Boolean","setFriendImage","length","FriendsControl","friends","setFriends","friendsList","handleSetSeledtedFriend","imagePath","Checkbox","label","checked","setChecked","GroupCreaterPanel","Set","checkedFriends","setCheckedFriends","handleOnCheckFriend","copy","has","delete","add","users","name","SearchControl","conversationQuery","setConversationQuery","query","MessagesListResult","SearchResultsPanel","results","setResults","groupMessages","privateMessages","AddFriendControl","newFriend","setNewFriend","currentUserID","error","ProfilePanel","setImage","inputFile","useRef","newImage","setNewImage","uploadImageUrl","ref","accept","files","current","click","htmlFor","data","FormData","append","uploadImage","UserControl","updatedImage","setUpdatedImage","updatedUsername","setUpdatedUsername","avatarURL","user","Dashboard","setSocket","currentUserData","setCurrentUserData","selectedFriendID","setSelectedFriendID","selectedGroupID","setSelectedGroupID","initialSocket","io","userData","off","removeItem","path","exact","render","SignUp","passwordConfirmantion","setPasswordConfirmantion","isLogin","PrivateRoute","Component","component","rest","props","PublicRoute","restricted","App","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25e6b667.chunk.js","sourcesContent":["import { BACKEND_URL } from \"../constants\";\n\nconst defaualtAPIConfig = (config) => {\n  return Object.assign(\n    {\n      method: \"POST\",\n      mode: \"cors\",\n      //cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": BACKEND_URL,\n        //\"Access-Control-Allow-Origin\": '*',\n        \"Access-Control-Allow-Methods\": 'POST'\n      },\n      //redirect: \"follow\",\n      //referrerPolicy: \"same-origin\",\n      body: JSON.stringify({}),\n    },\n    config\n  );\n};\n\nexport default async (url, body, config = {}) => {\n\n  const res = await fetch(\n    url,\n    defaualtAPIConfig({ ...config, body: JSON.stringify(body) })\n  );\n  return await res.json();\n};\n\nexport async function uploadImage( url, body ){\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    body\n  })\n\n  return await response.json()\n}","//export const BACKEND_URL = 'http://localhost:8080*'\nexport const BACKEND_URL = '34.71.53.122:8080/*'\nexport const BACKEND_URL_IMAGES = 'http://34.71.53.122:8080/uploads/'\nexport const BACKEND_URL_API = 'http://34.71.53.122:8080/api'\n\nexport const BACKEND_URL_SOCKET_PRIVATE = '34.71.53.122:8080/private'\n\nexport const DEFAULT_IMAGE_PROFILE = \"https://image.shutterstock.com/image-vector/profile-photo-vector-placeholder-pic-260nw-535853263.jpg\"","import React from \"react\";\n\nexport default function InputText({\n  placeholder,\n  type,\n  value,\n  handleOnChange,\n  errors,\n  handleOnKeyUp,\n}) {\n  return (\n    <div className=\"formField\">\n      <input\n        type={type}\n        placeholder={placeholder}\n        value={value}\n        onChange={({ target: { value } }) => handleOnChange(value)}\n        onKeyUp={handleOnKeyUp}\n      />\n      <span>{errors && Object.values(errors)}</span>\n    </div>\n  );\n}\n\nInputText.defaultProps = {\n  handleOnKeyUp: () => {},\n};\n","import React, { useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { BACKEND_URL_API } from \"../../constants\";\nimport requestHelper from \"../../helpers/request.helper\";\nimport InputText from \"../../components/Base/InputText.jsx\";\n\nexport default function Join() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [errors, setErrors] = useState({});\n\n  const handleOnLogin = (event) => {\n    const UserParameters = {\n      username,\n      password,\n    };\n\n\n    requestHelper(`${BACKEND_URL_API}/login`, UserParameters)\n      .then(({ valid, token, errors }) => {\n        event.preventDefault();\n        localStorage.setItem(\"token\", token);\n        setErrors(errors);\n        valid && window.location.assign(\"/dashboard\");\n      })\n      .catch((err) => {\n        setErrors({ ...errors, general: err });\n      });\n  };\n\n  return (\n    <div className=\"Join\">\n      <div className=\"Join__container\">\n        <h1 className=\"Join__title\">Welcome to CondorChat!</h1>\n\n        <InputText\n          type=\"text\"\n          placeholder=\"Type your username\"\n          value={username}\n          handleOnChange={setUsername}\n          errors={errors?.username}\n        />\n\n        <InputText\n          type=\"password\"\n          placeholder=\"Type your password\"\n          value={password}\n          handleOnChange={setPassword}\n          errors={errors?.password}\n        />\n\n        <div className=\"Join__buttons\">\n          <button className=\"--big\" onClick={handleOnLogin} type=\"button\">\n            Join\n            <i className=\"material-icons\"></i>\n          </button>\n          <Link to=\"/signup\">\n            <button type=\"button\">I dont have a accout</button>\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"credentials\">\n        <a href=\"https://github.com/01speed1/condor_chat\">\n          <span>Created by</span>\n          <p>Ocar Guzman - 01speed1</p>\n          <p>{\"A Condor lab test, I will take luck ;)\"}</p>\n\n          <img src=\"/git.png\" alt=\"\" />\n          <p>Gihub repo</p>\n        </a>\n      </div>\n    </div>\n  );\n}\n","import jwtDecoder from \"jwt-decode\";\n\nconst decodeUserToken = () => {\n  const token = localStorage.getItem(\"token\");\n  if (token) return jwtDecoder(token);\n  return {}\n};\n\nexport { decodeUserToken }\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { decodeUserToken } from \"../../../helpers/token.helper\";\n\nimport { whenPressEnter } from \"../../../helpers/events.helper\";\n\nfunction ChatPanel({ socket, selectedGroup, selectedFriend }) {\n  const [groupName, setGroupName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const { _id: userID } = decodeUserToken();\n\n  useEffect(() => {\n    if (selectedFriend) {\n      socket &&\n        socket.emit(\n          \"loadPrivateConversation\",\n          { userID, friendID: selectedFriend },\n          ({ messages, username }) => {\n            setMessages(messages.reverse());\n            setGroupName(username);\n          }\n        );\n    }\n\n    if (selectedGroup) {\n      socket &&\n        socket.emit(\n          \"loadGroupConversation\",\n          { userID, groupID: selectedGroup },\n          ({ messages, groupName }) => {\n            setGroupName(groupName);\n            setMessages(messages.reverse());\n          }\n        );\n    }\n\n    return () => {};\n  }, [selectedFriend, selectedGroup, messages]);\n\n  const handleOnSendMessage = (event) => {\n    event.preventDefault();\n\n    selectedFriend &&\n      socket &&\n      message &&\n      socket.emit(\n        \"sendPrivateMessage\",\n        { userID, friendID: selectedFriend, message, createdAt: Date.now() },\n        ({ errors }) => setMessage(\"\")\n      );\n\n    selectedGroup &&\n      socket &&\n      message &&\n      socket.emit(\n        \"sendGroupMessage\",\n        { userID, groupID: selectedGroup, message, createdAt: Date.now() },\n        ({ errors }) => setMessage(\"\")\n      );\n  };\n\n  const chooseSelectedConversation = () => {\n    if (selectedFriend || selectedGroup) return true;\n    return false;\n  };\n\n  return (\n    <div className=\"ChatPanel\">\n      <div className=\"ChatPanel__username\">\n        <h2>{groupName}</h2>\n      </div>\n      <div className=\"contain\" >\n        <div className=\"ChatPanel__messagesList\">\n          {messages?.map(({ message, userFrom, createdAt }, index) => (\n            <div>\n              <p\n                key={`message${index}`}\n                className={`MessageItem ${userID !== userFrom && \"--me\"}`}\n              >\n                {message}\n                <br/>\n                <span style={{fontSize:'1rem'}} >{new Date(createdAt).toString()}</span>\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {chooseSelectedConversation() && (\n        <div className=\"ChatPanel__messageInput formField\">\n          <div className=\"messageInput\">\n            <input\n              type=\"text\"\n              value={message}\n              placeholder=\"Type your message\"\n              onKeyUp={whenPressEnter(handleOnSendMessage)}\n              onChange={({ target: { value } }) => setMessage(value)}\n            />\n            <button\n              className=\"messageInput__sendButton\"\n              type=\"button\"\n              onClick={handleOnSendMessage}\n            >\n              <i className=\"material-icons\">send</i>\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nChatPanel.propTypes = {\n  socket: PropTypes.object,\n  friendID: PropTypes.string,\n};\n\nexport default ChatPanel;\n","const whenPressEnter = (callback) => (event) => {\n  event && event.keyCode === 13 && callback(event);\n};\n\nexport { whenPressEnter };\n","import React, { useEffect } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nfunction GroupItem({ groupID, groupName, socket }) {\n  useEffect(() => {\n    socket && socket.on(\"notifyGroup\", console.log);\n  }, []);\n\n  return (\n    <div className=\"groupItem\">\n      <Link to=\"/dashboard/chat\" key={groupID}>\n        {groupName}\n      </Link>\n      <div className=\"statusNotify\"></div>\n    </div>\n  );\n}\n\nexport default GroupItem;\n","import \"./GroupsControl.scss\";\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport GroupItem from \"./GroupItem\";\n\nfunction GroupsControl({\n  socket,\n  setSelectedGroup,\n  setSelectedFriend,\n  userID,\n}) {\n  const [groups, setGroups] = useState([]);\n\n  useEffect(() => {\n    socket &&\n      socket.emit(\"loadGroups\", { userID }, ({ errors, groups }) => {\n        setGroups(groups);\n      });\n  }, [socket, groups]);\n\n  const handleOnSelectedGroup = (groupID) => () => {\n    setSelectedGroup(groupID);\n    setSelectedFriend(null);\n  };\n\n  return (\n    <div className=\"GroupsControl\">\n      <h2 className=\"GroupsControl__title\">GROUPS</h2>\n      <Link to=\"/dashboard/create_group\">\n        <button >Create a new Group</button>\n      </Link>\n\n      <div className=\"GroupsControl__list\">\n        {groups?.map(({ groupName, groupID }, index) => (\n          <div key={`group_${index}`} onClick={handleOnSelectedGroup(groupID)}>\n            <GroupItem groupID={groupID} groupName={groupName} socket={socket} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nGroupsControl.propTypes = {\n  socket: PropTypes.object,\n  setSelectedGroup: PropTypes.func,\n  userID: PropTypes.string,\n};\n\nexport default GroupsControl;\n","import React, { useEffect, useState } from \"react\";\nimport { BACKEND_URL_IMAGES, DEFAULT_IMAGE_PROFILE } from \"../../../constants\";\nimport { Link } from \"react-router-dom\";\nimport { hourFormater } from \"../../../helpers/date.helper\";\n\nexport default function FriendItem({ username, socket, image, friendID }) {\n  const [time, setTime] = useState(null);\n  const [lastMessage, setLastMessage] = useState(null);\n  const [unseeMessage, setUnseeMessage] = useState([]);\n\n  const cleanUnseeMessage = () => setUnseeMessage([]);\n\n  useEffect(() => {\n    socket &&\n      socket.on(\"notifyPrivateMessage\", ({  message, meesageUserID }) => {\n        if (meesageUserID === friendID) {\n          setLastMessage(message);\n        }\n      });\n  }, [socket]);\n\n  useEffect(() => {\n    setTime(hourFormater());\n    setUnseeMessage([...unseeMessage, lastMessage].filter(Boolean));\n  }, [lastMessage]);\n\n  const setFriendImage = (image) => {\n    if (image) return `${BACKEND_URL_IMAGES}${image}`;\n    return DEFAULT_IMAGE_PROFILE;\n  };\n\n  return (\n    <li className=\"FriendItem\" onClick={cleanUnseeMessage}>\n      <Link to=\"/dashboard/chat\">\n        <div className=\"FriendItem__image\">\n          <img src={setFriendImage(image)} alt=\"\" />\n        </div>\n\n        <div className=\"FriendItem__content\">\n          <p className=\"username\">{username}</p>\n          <p className=\"lastMessage\">\n            {unseeMessage.length > 0 && lastMessage}\n          </p>\n        </div>\n\n        <div className=\"FriendItem__status\">\n          <div className=\"statusHour\">{unseeMessage.length > 0 && time}</div>\n          {unseeMessage.length > 0 && (\n            <div className=\"statusNotify\">{unseeMessage.length}</div>\n          )}\n        </div>\n      </Link>\n    </li>\n  );\n}\n","export const hourFormater = (hour = new Date()) => {\n  return `${hour.getHours()}:${hour.getMinutes()}`;\n};\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FriendItem from './FriendItem'\n\nfunction FriendsControl({\n  userID,\n  friends,\n  setFriends,\n  setSelectedFriend,\n  setSelectedGroup,\n  socket,\n}) {\n  useEffect(() => {\n    socket &&\n      socket.emit(\n        \"loadFriendList\",\n        { userID },\n        ({ errors, friends: friendsList }) => {\n          setFriends(friendsList.reverse());\n        }\n      );\n  }, [socket, friends]);\n\n  const handleSetSeledtedFriend = (friendID) => (event) => {\n    setSelectedFriend(friendID)\n    setSelectedGroup(null)\n  }\n\n  return (\n    <div className=\"FriendsControl\">\n      <h2>FRIENDS</h2>\n      <ul className=\"friendsList\">\n        {friends?.map(({ username, friendID, imagePath }, index) => (\n          <div onClick={handleSetSeledtedFriend(friendID)}>\n            <FriendItem key={`friend${index}`} username={username} friendID={friendID} socket={socket} image={imagePath} />\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nFriendsControl.propTypes = {\n  userID: PropTypes.string,\n  friends: PropTypes.array,\n  setFriends: PropTypes.func,\n  setSelectedFriend: PropTypes.func,\n  setSelectedGroup: PropTypes.func,\n  socket: PropTypes.object,\n};\n\nexport default FriendsControl;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Checkbox({onChange, label}) {\n\n  const [checked, setChecked] = useState(false)\n\n\n  const handleOnCheck = () => {\n    setChecked(!checked)\n    onChange(label)\n  }\n\n  return (\n    <div className=\"Checkbox\">\n      <label>\n        <input\n          type=\"checkbox\"\n          value={label}\n          checked={checked}\n          onChange={handleOnCheck}\n        />\n\n        {label}\n      </label>\n    </div>\n  );\n}\n\nCheckbox.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n};\n\nexport default Checkbox;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Checkbox from \"../../Base/Checkbox\";\nimport { Link } from \"react-router-dom\";\n\nfunction GroupCreaterPanel({ socket, friends, userID }) {\n  const [groupName, setGroupName] = useState(\"\");\n  const [checkedFriends, setCheckedFriends] = useState(new Set([userID]));\n\n  const handleOnCheckFriend = (friendID) => (event) => {\n    let copy = checkedFriends;\n    copy.has(friendID) ? copy.delete(friendID) : copy.add(friendID);\n    setCheckedFriends(copy);\n  };\n\n  const handleOnCreategroup = () => {\n    socket &&\n      socket.emit(\n        \"createGroup\",\n        { users: [...checkedFriends], name: groupName },\n        ({ errors }) => console.log(\"createGroup\", errors)\n      );\n  };\n\n  return (\n    <div className=\"GroupCreaterPanel formField\">\n      <input\n        type=\"text\"\n        value={groupName}\n        placeholder=\"Group name\"\n        onChange={({ target: { value } }) => setGroupName(value)}\n      />\n      <ul>\n        <h3>Friends to add:</h3>\n        {friends.map(({ username, friendID }) => (\n          <Checkbox\n            key={friendID}\n            label={username}\n            onChange={handleOnCheckFriend(friendID)}\n          />\n        ))}\n      </ul>\n      <Link to=\"/dashboard\">\n        <button type=\"button\" onClick={handleOnCreategroup}>\n          Create\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nGroupCreaterPanel.propTypes = {\n  socket: PropTypes.object,\n  friends: PropTypes.array.isRequired,\n};\n\nexport default GroupCreaterPanel;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { whenPressEnter } from \"../../../helpers/events.helper\";\nimport { Link } from \"react-router-dom\";\nimport InputText from \"../../Base/InputText\";\n\nfunction SearchControl({ socket, userID }) {\n  const [conversationQuery, setConversationQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  const handleOnSearch = () => {\n    socket && socket.emit(\"searchConversation\", { query: conversationQuery, userID });\n  };\n\n  return (\n    <div className=\"SearchControl\">\n      <InputText\n        placeholder=\"Search Conversation\"\n        type=\"search\"\n        value={conversationQuery}\n        handleOnChange={setConversationQuery}\n      />\n\n      <Link to=\"/dashboard/result\">\n        <button onClick={handleOnSearch} className=\"SearchControl__searchButton\" type=\"button\">\n          <i className=\"material-icons\">find_in_page</i>\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nSearchControl.propTypes = {\n  socket: PropTypes.object,\n};\n\nexport default SearchControl;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction MessagesListResult({ label, messages }) {\n  return (\n    <div className=\"MessagesListResult\">\n      <h3>{label}</h3>\n      {messages?.map(({ message, username }, index) => (\n        <div className=\"listResult\" key={`mp${index}`}>\n          <span>{username}</span>\n          <p>{message}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nMessagesListResult.propTypes = {\n  label: PropTypes.string,\n  messages: PropTypes.array,\n};\n\nexport default MessagesListResult;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MessagesListResult from \"./MessagesListResult\";\nimport { Link } from \"react-router-dom\";\n\nfunction SearchResultsPanel({ socket }) {\n  const [results, setResults] = useState({});\n\n  useEffect(() => {\n    socket && socket.on(\"searchResults\", (messages) => {\n      setResults(messages);\n    });\n  }, [socket, results]);\n\n  return (\n    <div className=\"SearchResultsPanel\">\n      <div className=\"SearchResultsPanel__header\">\n        <h2>Search ressults </h2>\n        <Link to=\"/dashboard/welcome\">\n          <button>Close</button>\n        </Link>\n      </div>\n      <div className=\"SearchResultsPanel__results\">\n        <MessagesListResult\n          label={\"Private\"}\n          messages={results?.groupMessages}\n        />\n        <MessagesListResult\n          label={\"Group\"}\n          messages={results?.privateMessages}\n        />\n      </div>\n    </div>\n  );\n}\n\nSearchResultsPanel.propTypes = {\n  socket: PropTypes.object,\n};\n\nexport default SearchResultsPanel;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport InputText from \"../../Base/InputText\";\n\nexport default function AddFriendControl({\n  socket,\n  userID,\n  setSelectedFriend,\n}) {\n  const [newFriend, setNewFriend] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n\n  const handleOnSearchFriend = (event) => {\n    event.preventDefault();\n\n    socket.emit(\n      \"addFriend\",\n      { currentUserID: userID, newFriend },\n      ({ friendID, errors }) => {\n        setErrors(errors?.error);\n        !errors && setSelectedFriend(friendID);\n        !errors && setNewFriend(\"\");\n      }\n    );\n  };\n\n  return (\n    <div className=\"addFriendControl\">\n      {/* <input\n        type=\"text\"\n        value={newFriend}\n        placeholder=\"Add friend\"\n        onChange={handleOnChangeNewFriend}\n      /> */}\n\n      <InputText\n        placeholder=\"Add friend\"\n        type=\"text\"\n        value={newFriend}\n        handleOnChange={setNewFriend}\n        errors={errors}\n      />\n\n      <Link to=\"/dashboard/chat\">\n        <button className=\"addFriendControl__addButton\" onClick={handleOnSearchFriend}>\n          <span className=\"material-icons\">add_circle</span>\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nAddFriendControl.propTypes = {\n  socket: PropTypes.object,\n  userID: PropTypes.string,\n};\n","import React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { uploadImage } from \"../../../helpers/request.helper\";\nimport { BACKEND_URL_API, BACKEND_URL_IMAGES } from \"../../../constants\";\n\nexport default function ProfilePanel({ userID  }) {\n  const [image, setImage] = useState(null);\n  const inputFile = useRef(null);\n  const [ message, setMessage ] = useState('Click here to Change the pick!')\n\n  const [newImage, setNewImage] = useState(null)\n\n  const uploadImageUrl = `${BACKEND_URL_API}/image_uploader`;\n\n  const handleOnUploadImage = (event) => {\n    setMessage('Uploading...')\n    event.preventDefault();\n\n    const data = new FormData();\n    data.append(\"image\", image);\n    data.append(\"userID\", userID);\n\n    uploadImage(uploadImageUrl, data).then(({imagePath})=>{\n      setNewImage(`${BACKEND_URL_IMAGES}${imagePath}`)\n      setMessage('Updated image!!')\n    }).catch(console.log);\n  };\n\n  const handleOnSetImage = ({ target: { files } }) => {\n    setMessage('Image selected.')\n    setImage(files[0])\n  }\n\n  const handleOpenFileSelector = () => { inputFile.current.click() }\n\n  return (\n    <div className='uploader' >\n      <h2>Change Profile Photo</h2>\n\n      <div className=\"uploader__preview\" >\n        {newImage && (<img src={newImage} alt=\"\"/>)}\n      </div>\n\n      <input\n      ref={inputFile}\n        type=\"file\"\n        name=\"image\"\n        accept=\"image/x-png,image/gif,image/jpeg\"\n        className=\"uploader__input\"\n        onChange={handleOnSetImage}\n        />\n        <label onClick={handleOpenFileSelector} htmlFor=\"image\">{message}</label>\n      <button type=\"button\" onClick={handleOnUploadImage}>\n        upload\n      </button>\n    </div>\n  );\n}\n\nProfilePanel.propTypes = {\n  userID: PropTypes.string,\n};\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { BACKEND_URL_IMAGES } from \"../../../constants\";\n\nfunction UserControl({ socket, userID }) {\n\n  const [updatedImage, setUpdatedImage] = useState('')\n  const [updatedUsername, setUpdatedUsername] = useState('')\n\n  const avatarURL = `${BACKEND_URL_IMAGES}${updatedImage}`;\n\n  useEffect(() => {\n    socket && socket.emit(\"connectUser\", { userID }, ({user: {imagePath, username}}) => {\n\n      setUpdatedImage(imagePath)\n      setUpdatedUsername(username)\n    });\n  });\n\n  return (\n    <div className=\"UserControl\">\n      <Link to=\"/dashboard/profile\">\n      {updatedImage && (\n        <div className=\"UserControl__avatar\">\n          <img src={avatarURL} alt=\"avatar\" />\n        </div>\n      )}\n      </Link>\n      {updatedUsername && <h1 className='UserControl__username' >{`${updatedUsername}`}</h1>}\n      <Link to=\"/\" className=\"UserControl__closeButton\">\n        <span className=\"material-icons\">close</span>\n      </Link>\n    </div>\n  );\n}\n\nUserControl.propTypes = {\n  currentUserData: PropTypes.object,\n};\n\nexport default UserControl;\n","import React, { useState, useEffect } from \"react\";\n\nimport io from \"socket.io-client\";\n\nimport { BACKEND_URL_SOCKET_PRIVATE } from \"../../constants\";\n\nimport { decodeUserToken } from \"../../helpers/token.helper\";\n\nimport { Route } from \"react-router-dom\";\n\nimport ChatPanel from \"../../components/Panels/ChatPanel\";\nimport GroupsControl from \"../../components/Controls/GroupsControl\";\nimport FriendsControl from \"../../components/Controls/FriendsControl\";\nimport GroupCreaterPanel from \"../../components/Panels/GroupCreaterPanel\";\nimport SearchControl from \"../../components/Controls/SearchControl\";\nimport SearchResultsPanel from \"../../components/Panels/SearchResultsPanel\";\nimport AddFriendControl from \"../../components/Controls/addFriendControl\";\nimport ProfilePanel from \"../../components/Panels/ProfilePanel\";\nimport UserControl from \"../../components/Controls/UserControl\";\n\nexport default function Dashboard() {\n  const [socket, setSocket] = useState(null);\n\n  const [token] = useState(localStorage.getItem(\"token\"));\n\n  const [currentUserData, setCurrentUserData] = useState({});\n\n  const [friends, setFriends] = useState([]);\n\n  const [selectedFriendID, setSelectedFriendID] = useState(\"\");\n  const [selectedGroupID, setSelectedGroupID] = useState(\"\");\n\n  useEffect(() => {\n    const initialSocket = io(BACKEND_URL_SOCKET_PRIVATE, {\n      query: `token=${token}`,\n    });\n\n    setSocket(initialSocket);\n\n    const userData = decodeUserToken(token);\n\n    setCurrentUserData(userData);\n\n    return () => {\n      initialSocket.emit(\"disconnect\", { userID: userData._id });\n      initialSocket.off();\n      localStorage.removeItem(\"token\");\n    };\n  }, [token]);\n\n  return (\n    <div className=\"Dashboard\">\n      <div className=\"Dashboard__sideBar\">\n        {/* Move to in component */}\n        <div className=\"SideBar\">\n          <div className=\"SideBar__userContainer\">\n            <UserControl userID={currentUserData._id} socket={socket} />\n          </div>\n          <div className=\"SideBar__searchContainer\">\n            <SearchControl socket={socket} userID={currentUserData._id} />\n          </div>\n\n          <div className=\"SideBar__addFriendContainer\">\n            <AddFriendControl\n              setSelectedFriend={setSelectedFriendID}\n              socket={socket}\n              userID={currentUserData._id}\n            />\n          </div>\n          <div className=\"SideBar__friendsList\">\n            <FriendsControl\n              userID={currentUserData._id}\n              socket={socket}\n              friends={friends}\n              setFriends={setFriends}\n              setSelectedFriend={setSelectedFriendID}\n              setSelectedGroup={setSelectedGroupID}\n            />\n          </div>\n\n          <div className=\"SideBar__groupsList\">\n            <GroupsControl\n              socket={socket}\n              setSelectedGroup={setSelectedGroupID}\n              setSelectedFriend={setSelectedFriendID}\n              userID={currentUserData._id}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"Dashboard__chatPanel\">\n        <Route\n          path=\"/dashboard/profile\"\n          exact\n          render={() => <ProfilePanel userID={currentUserData._id} />}\n        />\n\n        <Route\n          path=\"/dashboard/chat\"\n          exact\n          render={() => (\n            <ChatPanel\n              socket={socket}\n              selectedGroup={selectedGroupID}\n              selectedFriend={selectedFriendID}\n            />\n          )}\n        />\n\n        <Route\n          path=\"/dashboard/result\"\n          exact\n          render={() => <SearchResultsPanel socket={socket} />}\n        />\n\n        <Route\n          path=\"/dashboard/create_group\"\n          exact\n          render={() => (\n            <GroupCreaterPanel\n              setSelectedGroup={setSelectedGroupID}\n              socket={socket}\n              userID={currentUserData._id}\n              friends={friends}\n            />\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { BACKEND_URL_API } from \"../../constants\";\n\nimport requestHelper from \"../../helpers/request.helper\";\nimport { Link } from \"react-router-dom\";\nimport InputText from \"../../components/Base/InputText\";\n\nexport default function SignUp() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmantion, setPasswordConfirmantion] = useState(\"\");\n\n  const [errors, setErrors] = useState({});\n\n  const handleOnSigUp = (event) => {\n    event.preventDefault();\n\n    const UserParameters = {\n      username,\n      password,\n      passwordConfirmantion,\n      createdAt: Date.now(),\n    };\n\n    requestHelper(`${BACKEND_URL_API}/signup`, UserParameters)\n      .then(({ valid, errors }) => {\n        valid && window.location.assign(\"/\");\n        console.log(errors);\n      })\n      .catch((err) => {\n        setErrors({ ...errors, general: err });\n      });\n  };\n\n  return (\n    <div className=\"Join\">\n      <div className=\"Join__container --signup\">\n        <h1 className=\"Join__title\">Hey Sign Up to chat!</h1>\n        <span>\n          {errors?.general && JSON.stringify(errors?.general, null, 2)}\n        </span>\n\n        <InputText\n          type=\"text\"\n          placeholder=\"Type your username\"\n          value={username}\n          handleOnChange={setUsername}\n          errors={errors?.username}\n        />\n\n        <InputText\n          type=\"password\"\n          placeholder=\"Type your password\"\n          value={password}\n          handleOnChange={setPassword}\n          errors={errors?.password}\n        />\n\n        <InputText\n          type=\"password\"\n          placeholder=\"Confirm your password\"\n          value={passwordConfirmantion}\n          handleOnChange={setPasswordConfirmantion}\n          errors={errors?.passwordConfirmantion}\n        />\n        <div className=\"Join__buttons\">\n          <button className=\"--big\" type=\"submit\" onClick={handleOnSigUp}>\n            SignUp\n          </button>\n          <Link to=\"/\">\n            <button type=\"button\">I have a Account</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","const isLogin = () => Boolean(localStorage.getItem('token'))\n\nexport { isLogin }","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../../utils/auth';\n\nexport default function PrivateRoute({component: Component, ...rest}) {\n    return (\n\n        <Route {...rest} render={props => (\n            isLogin() ?\n                <Component {...props} />\n            : <Redirect to=\"/\" />\n        )} />\n    );\n};","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { isLogin } from \"../../utils/auth\";\n\nexport default function PublicRoute({\n  component: Component,\n  restricted,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLogin() && restricted ? (\n          <Redirect to=\"/dashboard\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n}\n","import React from \"react\";\nimport \"./App.scss\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Join from \"../Join\";\nimport Dashboard from \"../Dashboard\";\nimport SignUp from \"../SignUp\";\nimport PrivateRoute from \"../../shared/Auth/PrivateRoute\";\nimport PublicRoute from \"../../shared/Auth/PublicRoute\";\n\nexport default function App() {\n  return (\n    <Router>\n      <PublicRoute path=\"/signup\" component={SignUp} />\n      <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n      <PublicRoute path=\"/\" exact component={Join} />\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './styles/index.scss'\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './views/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}